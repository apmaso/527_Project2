/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP3
// Date      : Thu Nov 23 15:40:44 2023
/////////////////////////////////////////////////////////////


module eight_bit_select_adder ( clk, reset_n, A, B, Cin, output_sum, 
        output_Cout );
  input [7:0] A;
  input [7:0] B;
  output [7:0] output_sum;
  input clk, reset_n, Cin;
  output output_Cout;
  wire   lower_Cout, upper_Cout_0, upper_Cout_1, n10, n11, n12, n13, n14,
         \lower_adder/n16 , \lower_adder/n15 , \lower_adder/n14 , n21, n22,
         n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36,
         n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,
         n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92,
         n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n129,
         n130, n131, n145, n146, n147;
  wire   [3:0] lower_sum;
  wire   [3:0] upper_sum_0;
  wire   [3:0] upper_sum_1;
  wire   [1:0] \lower_adder/sum0 ;
  wire   [3:0] \lower_adder/B_reg ;
  wire   [3:0] \lower_adder/A_reg ;
  wire   [1:0] \upper_adder_cin_1/sum0 ;
  wire   [3:0] \upper_adder_cin_1/B_reg ;
  wire   [3:0] \upper_adder_cin_1/A_reg ;
  wire   [1:0] \upper_adder_cin_0/sum0 ;
  wire   [3:0] \upper_adder_cin_0/B_reg ;
  wire   [3:0] \upper_adder_cin_0/A_reg ;

  DFFSR Cout_reg_reg ( .D(n14), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_Cout) );
  DFFSR \sum_reg_reg[7]  ( .D(n10), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[7]) );
  DFFSR \sum_reg_reg[6]  ( .D(n11), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[6]) );
  DFFSR \sum_reg_reg[5]  ( .D(n12), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[5]) );
  DFFSR \sum_reg_reg[4]  ( .D(n13), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[4]) );
  DFFSR \sum_reg_reg[3]  ( .D(lower_sum[3]), .CLK(clk), .R(reset_n), .S(1'b1), 
        .Q(output_sum[3]) );
  DFFSR \sum_reg_reg[2]  ( .D(lower_sum[2]), .CLK(clk), .R(reset_n), .S(1'b1), 
        .Q(output_sum[2]) );
  DFFSR \sum_reg_reg[1]  ( .D(lower_sum[1]), .CLK(clk), .R(reset_n), .S(1'b1), 
        .Q(output_sum[1]) );
  DFFSR \sum_reg_reg[0]  ( .D(lower_sum[0]), .CLK(clk), .R(reset_n), .S(1'b1), 
        .Q(output_sum[0]) );
  DFFSR \lower_adder/sum_reg_reg[0]  ( .D(\lower_adder/sum0 [0]), .CLK(clk), 
        .R(reset_n), .S(1'b1), .Q(lower_sum[0]) );
  DFFSR \lower_adder/sum_reg_reg[1]  ( .D(\lower_adder/sum0 [1]), .CLK(clk), 
        .R(reset_n), .S(1'b1), .Q(lower_sum[1]) );
  DFFSR \lower_adder/sum_reg_reg[2]  ( .D(\lower_adder/n15 ), .CLK(clk), .R(
        reset_n), .S(1'b1), .Q(lower_sum[2]) );
  DFFSR \lower_adder/sum_reg_reg[3]  ( .D(\lower_adder/n14 ), .CLK(clk), .R(
        reset_n), .S(1'b1), .Q(lower_sum[3]) );
  DFFSR \lower_adder/Cout_reg_reg  ( .D(\lower_adder/n16 ), .CLK(clk), .R(
        reset_n), .S(1'b1), .Q(lower_Cout) );
  DFFSR \lower_adder/A_reg_reg[0]  ( .D(A[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/A_reg [0]) );
  DFFSR \lower_adder/A_reg_reg[1]  ( .D(A[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/A_reg [1]) );
  DFFSR \lower_adder/A_reg_reg[2]  ( .D(A[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/A_reg [2]) );
  DFFSR \lower_adder/A_reg_reg[3]  ( .D(A[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/A_reg [3]) );
  DFFSR \lower_adder/B_reg_reg[0]  ( .D(B[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/B_reg [0]) );
  DFFSR \lower_adder/B_reg_reg[1]  ( .D(B[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/B_reg [1]) );
  DFFSR \lower_adder/B_reg_reg[2]  ( .D(B[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/B_reg [2]) );
  DFFSR \lower_adder/B_reg_reg[3]  ( .D(B[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(\lower_adder/B_reg [3]) );
  DFFSR \upper_adder_cin_1/sum_reg_reg[0]  ( .D(\upper_adder_cin_1/sum0 [0]), 
        .CLK(clk), .R(reset_n), .S(1'b1), .Q(upper_sum_1[0]) );
  DFFSR \upper_adder_cin_1/sum_reg_reg[1]  ( .D(\upper_adder_cin_1/sum0 [1]), 
        .CLK(clk), .R(reset_n), .S(1'b1), .Q(upper_sum_1[1]) );
  DFFSR \upper_adder_cin_1/sum_reg_reg[2]  ( .D(n146), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_sum_1[2]) );
  DFFSR \upper_adder_cin_1/sum_reg_reg[3]  ( .D(n145), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_sum_1[3]) );
  DFFSR \upper_adder_cin_1/Cout_reg_reg  ( .D(n147), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_Cout_1) );
  DFFSR \upper_adder_cin_1/A_reg_reg[0]  ( .D(A[4]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/A_reg [0]) );
  DFFSR \upper_adder_cin_1/A_reg_reg[1]  ( .D(A[5]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/A_reg [1]) );
  DFFSR \upper_adder_cin_1/A_reg_reg[2]  ( .D(A[6]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/A_reg [2]) );
  DFFSR \upper_adder_cin_1/A_reg_reg[3]  ( .D(A[7]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/A_reg [3]) );
  DFFSR \upper_adder_cin_1/B_reg_reg[0]  ( .D(B[4]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/B_reg [0]) );
  DFFSR \upper_adder_cin_1/B_reg_reg[1]  ( .D(B[5]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/B_reg [1]) );
  DFFSR \upper_adder_cin_1/B_reg_reg[2]  ( .D(B[6]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/B_reg [2]) );
  DFFSR \upper_adder_cin_1/B_reg_reg[3]  ( .D(B[7]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_1/B_reg [3]) );
  DFFSR \upper_adder_cin_0/sum_reg_reg[0]  ( .D(\upper_adder_cin_0/sum0 [0]), 
        .CLK(clk), .R(reset_n), .S(1'b1), .Q(upper_sum_0[0]) );
  DFFSR \upper_adder_cin_0/sum_reg_reg[1]  ( .D(\upper_adder_cin_0/sum0 [1]), 
        .CLK(clk), .R(reset_n), .S(1'b1), .Q(upper_sum_0[1]) );
  DFFSR \upper_adder_cin_0/sum_reg_reg[2]  ( .D(n130), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_sum_0[2]) );
  DFFSR \upper_adder_cin_0/sum_reg_reg[3]  ( .D(n129), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_sum_0[3]) );
  DFFSR \upper_adder_cin_0/Cout_reg_reg  ( .D(n131), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(upper_Cout_0) );
  DFFSR \upper_adder_cin_0/A_reg_reg[0]  ( .D(A[4]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/A_reg [0]) );
  DFFSR \upper_adder_cin_0/A_reg_reg[1]  ( .D(A[5]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/A_reg [1]) );
  DFFSR \upper_adder_cin_0/A_reg_reg[2]  ( .D(A[6]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/A_reg [2]) );
  DFFSR \upper_adder_cin_0/A_reg_reg[3]  ( .D(A[7]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/A_reg [3]) );
  DFFSR \upper_adder_cin_0/B_reg_reg[0]  ( .D(B[4]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/B_reg [0]) );
  DFFSR \upper_adder_cin_0/B_reg_reg[1]  ( .D(B[5]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/B_reg [1]) );
  DFFSR \upper_adder_cin_0/B_reg_reg[2]  ( .D(B[6]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/B_reg [2]) );
  DFFSR \upper_adder_cin_0/B_reg_reg[3]  ( .D(B[7]), .CLK(clk), .R(reset_n), 
        .S(1'b1), .Q(\upper_adder_cin_0/B_reg [3]) );
  INVX2 U23 ( .A(\lower_adder/B_reg [0]), .Y(n26) );
  AND2X2 U24 ( .A(\lower_adder/A_reg [0]), .B(Cin), .Y(n21) );
  INVX2 U25 ( .A(n21), .Y(n42) );
  XOR2X1 U26 ( .A(n112), .B(\lower_adder/B_reg [1]), .Y(\lower_adder/sum0 [1])
         );
  BUFX4 U27 ( .A(\lower_adder/A_reg [0]), .Y(n28) );
  XNOR2X1 U28 ( .A(n68), .B(n89), .Y(n60) );
  XNOR2X1 U29 ( .A(n73), .B(n101), .Y(n66) );
  AND2X2 U30 ( .A(n106), .B(n105), .Y(n22) );
  INVX1 U31 ( .A(n28), .Y(n30) );
  INVX1 U32 ( .A(\lower_adder/B_reg [2]), .Y(n38) );
  BUFX2 U33 ( .A(\lower_adder/A_reg [1]), .Y(n23) );
  XNOR2X1 U34 ( .A(n28), .B(Cin), .Y(n43) );
  INVX1 U35 ( .A(n106), .Y(n24) );
  INVX1 U36 ( .A(n24), .Y(n25) );
  INVX1 U37 ( .A(n43), .Y(n29) );
  INVX2 U38 ( .A(n26), .Y(n27) );
  INVX2 U39 ( .A(Cin), .Y(n31) );
  XOR2X1 U40 ( .A(n27), .B(n29), .Y(\lower_adder/sum0 [0]) );
  AOI21X1 U41 ( .A(n31), .B(n30), .C(n26), .Y(n35) );
  NAND2X1 U42 ( .A(n23), .B(n42), .Y(n40) );
  NOR2X1 U43 ( .A(\lower_adder/A_reg [1]), .B(n26), .Y(n32) );
  OAI21X1 U44 ( .A(n28), .B(Cin), .C(n32), .Y(n33) );
  OAI21X1 U45 ( .A(n23), .B(n42), .C(n33), .Y(n34) );
  INVX2 U46 ( .A(n34), .Y(n41) );
  OAI21X1 U47 ( .A(n35), .B(n40), .C(n41), .Y(n112) );
  XOR2X1 U48 ( .A(\upper_adder_cin_0/B_reg [0]), .B(
        \upper_adder_cin_0/A_reg [0]), .Y(\upper_adder_cin_0/sum0 [0]) );
  INVX2 U49 ( .A(\upper_adder_cin_1/A_reg [0]), .Y(n37) );
  INVX2 U50 ( .A(\upper_adder_cin_1/B_reg [0]), .Y(n36) );
  NAND2X1 U51 ( .A(n37), .B(n36), .Y(n61) );
  OAI21X1 U52 ( .A(n37), .B(n36), .C(n61), .Y(\upper_adder_cin_1/sum0 [0]) );
  INVX2 U53 ( .A(\lower_adder/A_reg [2]), .Y(n46) );
  NAND2X1 U54 ( .A(n46), .B(n38), .Y(n39) );
  XOR2X1 U55 ( .A(n39), .B(\lower_adder/A_reg [3]), .Y(n110) );
  AOI22X1 U56 ( .A(\lower_adder/A_reg [3]), .B(n39), .C(\lower_adder/B_reg [3]), .D(n110), .Y(n51) );
  NAND2X1 U57 ( .A(n41), .B(n40), .Y(n107) );
  OAI21X1 U58 ( .A(n27), .B(n21), .C(\lower_adder/A_reg [1]), .Y(n104) );
  NAND2X1 U59 ( .A(n42), .B(n43), .Y(n106) );
  AOI21X1 U60 ( .A(\lower_adder/B_reg [1]), .B(n107), .C(n22), .Y(n50) );
  NAND2X1 U61 ( .A(\lower_adder/B_reg [2]), .B(\lower_adder/A_reg [2]), .Y(n44) );
  XOR2X1 U62 ( .A(n44), .B(\lower_adder/A_reg [3]), .Y(n111) );
  INVX2 U63 ( .A(n111), .Y(n48) );
  INVX2 U64 ( .A(\lower_adder/A_reg [3]), .Y(n45) );
  NOR2X1 U65 ( .A(n46), .B(n45), .Y(n47) );
  AOI22X1 U66 ( .A(n48), .B(\lower_adder/B_reg [3]), .C(n47), .D(
        \lower_adder/B_reg [2]), .Y(n49) );
  OAI21X1 U67 ( .A(n51), .B(n50), .C(n49), .Y(\lower_adder/n16 ) );
  MUX2X1 U68 ( .B(upper_sum_0[0]), .A(upper_sum_1[0]), .S(lower_Cout), .Y(n52)
         );
  INVX2 U69 ( .A(n52), .Y(n13) );
  NAND2X1 U70 ( .A(\upper_adder_cin_0/B_reg [0]), .B(
        \upper_adder_cin_0/A_reg [0]), .Y(n58) );
  INVX2 U71 ( .A(n58), .Y(n55) );
  XOR2X1 U72 ( .A(\upper_adder_cin_0/A_reg [1]), .B(
        \upper_adder_cin_0/B_reg [1]), .Y(n53) );
  XOR2X1 U73 ( .A(n55), .B(n53), .Y(\upper_adder_cin_0/sum0 [1]) );
  FAX1 U74 ( .A(\upper_adder_cin_1/B_reg [1]), .B(\upper_adder_cin_1/A_reg [1]), .C(n61), .YS(\upper_adder_cin_1/sum0 [1]) );
  MUX2X1 U75 ( .B(upper_sum_0[1]), .A(upper_sum_1[1]), .S(lower_Cout), .Y(n54)
         );
  INVX2 U76 ( .A(n54), .Y(n12) );
  INVX2 U77 ( .A(\upper_adder_cin_0/A_reg [2]), .Y(n68) );
  INVX2 U78 ( .A(\upper_adder_cin_0/A_reg [1]), .Y(n57) );
  OAI21X1 U79 ( .A(\upper_adder_cin_0/A_reg [1]), .B(n55), .C(
        \upper_adder_cin_0/B_reg [1]), .Y(n56) );
  OAI21X1 U80 ( .A(n58), .B(n57), .C(n56), .Y(n59) );
  INVX2 U81 ( .A(n59), .Y(n83) );
  XOR2X1 U82 ( .A(n60), .B(n83), .Y(n130) );
  INVX2 U83 ( .A(\upper_adder_cin_1/A_reg [2]), .Y(n73) );
  INVX2 U84 ( .A(n61), .Y(n64) );
  INVX2 U85 ( .A(\upper_adder_cin_1/A_reg [1]), .Y(n63) );
  OAI21X1 U86 ( .A(\upper_adder_cin_1/A_reg [1]), .B(n61), .C(
        \upper_adder_cin_1/B_reg [1]), .Y(n62) );
  OAI21X1 U87 ( .A(n64), .B(n63), .C(n62), .Y(n65) );
  INVX2 U88 ( .A(n65), .Y(n95) );
  XOR2X1 U89 ( .A(n66), .B(n95), .Y(n146) );
  MUX2X1 U90 ( .B(upper_sum_0[2]), .A(upper_sum_1[2]), .S(lower_Cout), .Y(n67)
         );
  INVX2 U91 ( .A(n67), .Y(n11) );
  INVX2 U92 ( .A(\upper_adder_cin_0/B_reg [2]), .Y(n89) );
  NAND2X1 U93 ( .A(n68), .B(n89), .Y(n79) );
  INVX2 U94 ( .A(n79), .Y(n82) );
  XOR2X1 U95 ( .A(\upper_adder_cin_0/A_reg [3]), .B(n82), .Y(n69) );
  XOR2X1 U96 ( .A(\upper_adder_cin_0/B_reg [3]), .B(n69), .Y(n72) );
  NAND2X1 U97 ( .A(\upper_adder_cin_0/B_reg [2]), .B(
        \upper_adder_cin_0/A_reg [2]), .Y(n70) );
  XOR2X1 U98 ( .A(n70), .B(\upper_adder_cin_0/A_reg [3]), .Y(n85) );
  XOR2X1 U99 ( .A(n85), .B(\upper_adder_cin_0/B_reg [3]), .Y(n71) );
  MUX2X1 U100 ( .B(n72), .A(n71), .S(n83), .Y(n129) );
  INVX2 U101 ( .A(\upper_adder_cin_1/B_reg [2]), .Y(n101) );
  NAND2X1 U102 ( .A(n73), .B(n101), .Y(n91) );
  INVX2 U103 ( .A(n91), .Y(n94) );
  XOR2X1 U104 ( .A(\upper_adder_cin_1/A_reg [3]), .B(n94), .Y(n74) );
  XOR2X1 U105 ( .A(\upper_adder_cin_1/B_reg [3]), .B(n74), .Y(n77) );
  NAND2X1 U106 ( .A(\upper_adder_cin_1/B_reg [2]), .B(
        \upper_adder_cin_1/A_reg [2]), .Y(n75) );
  XOR2X1 U107 ( .A(n75), .B(\upper_adder_cin_1/A_reg [3]), .Y(n97) );
  XOR2X1 U108 ( .A(n97), .B(\upper_adder_cin_1/B_reg [3]), .Y(n76) );
  MUX2X1 U109 ( .B(n77), .A(n76), .S(n95), .Y(n145) );
  MUX2X1 U110 ( .B(upper_sum_0[3]), .A(upper_sum_1[3]), .S(lower_Cout), .Y(n78) );
  INVX2 U111 ( .A(n78), .Y(n10) );
  NAND2X1 U112 ( .A(\upper_adder_cin_0/A_reg [3]), .B(
        \upper_adder_cin_0/A_reg [2]), .Y(n90) );
  INVX2 U113 ( .A(\upper_adder_cin_0/A_reg [3]), .Y(n81) );
  OAI21X1 U114 ( .A(\upper_adder_cin_0/A_reg [3]), .B(n79), .C(
        \upper_adder_cin_0/B_reg [3]), .Y(n80) );
  OAI21X1 U115 ( .A(n82), .B(n81), .C(n80), .Y(n87) );
  INVX2 U116 ( .A(\upper_adder_cin_0/B_reg [3]), .Y(n84) );
  OAI21X1 U117 ( .A(n85), .B(n84), .C(n83), .Y(n86) );
  NAND2X1 U118 ( .A(n87), .B(n86), .Y(n88) );
  OAI21X1 U119 ( .A(n90), .B(n89), .C(n88), .Y(n131) );
  NAND2X1 U120 ( .A(\upper_adder_cin_1/A_reg [3]), .B(
        \upper_adder_cin_1/A_reg [2]), .Y(n102) );
  INVX2 U121 ( .A(\upper_adder_cin_1/A_reg [3]), .Y(n93) );
  OAI21X1 U122 ( .A(\upper_adder_cin_1/A_reg [3]), .B(n91), .C(
        \upper_adder_cin_1/B_reg [3]), .Y(n92) );
  OAI21X1 U123 ( .A(n94), .B(n93), .C(n92), .Y(n99) );
  INVX2 U124 ( .A(\upper_adder_cin_1/B_reg [3]), .Y(n96) );
  OAI21X1 U125 ( .A(n97), .B(n96), .C(n95), .Y(n98) );
  NAND2X1 U126 ( .A(n99), .B(n98), .Y(n100) );
  OAI21X1 U127 ( .A(n102), .B(n101), .C(n100), .Y(n147) );
  MUX2X1 U128 ( .B(upper_Cout_0), .A(upper_Cout_1), .S(lower_Cout), .Y(n103)
         );
  INVX2 U129 ( .A(n103), .Y(n14) );
  XNOR2X1 U130 ( .A(\lower_adder/B_reg [2]), .B(\lower_adder/A_reg [2]), .Y(
        n109) );
  INVX2 U131 ( .A(n104), .Y(n105) );
  AOI22X1 U132 ( .A(n107), .B(\lower_adder/B_reg [1]), .C(n25), .D(n105), .Y(
        n108) );
  XOR2X1 U133 ( .A(n108), .B(n109), .Y(\lower_adder/n15 ) );
  XNOR2X1 U134 ( .A(\lower_adder/B_reg [3]), .B(n110), .Y(n115) );
  XOR2X1 U135 ( .A(n111), .B(\lower_adder/B_reg [3]), .Y(n114) );
  AOI21X1 U136 ( .A(\lower_adder/B_reg [1]), .B(n112), .C(n22), .Y(n113) );
  MUX2X1 U137 ( .B(n115), .A(n114), .S(n113), .Y(\lower_adder/n14 ) );
endmodule

