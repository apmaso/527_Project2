/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP3
// Date      : Mon Nov 20 15:03:06 2023
/////////////////////////////////////////////////////////////


module four_bit_select_adder ( clk, reset_n, A, B, Cin, output_sum, 
        output_Cout );
  input [3:0] A;
  input [3:0] B;
  output [3:0] output_sum;
  input clk, reset_n, Cin;
  output output_Cout;
  wire   n14, n15, n16, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31,
         n32, n33, n34, n35;
  wire   [3:0] A_reg;
  wire   [3:0] B_reg;
  wire   [1:0] sum0;

  DFFSR \B_reg_reg[3]  ( .D(B[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[3]) );
  DFFSR \B_reg_reg[2]  ( .D(B[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[2]) );
  DFFSR \B_reg_reg[1]  ( .D(B[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[1]) );
  DFFSR \B_reg_reg[0]  ( .D(B[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[0]) );
  DFFSR \A_reg_reg[3]  ( .D(A[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[3]) );
  DFFSR \A_reg_reg[2]  ( .D(A[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[2]) );
  DFFSR \A_reg_reg[1]  ( .D(A[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[1]) );
  DFFSR \A_reg_reg[0]  ( .D(A[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[0]) );
  DFFSR Cout_reg_reg ( .D(n16), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_Cout) );
  DFFSR \sum_reg_reg[3]  ( .D(n14), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[3]) );
  DFFSR \sum_reg_reg[2]  ( .D(n15), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[2]) );
  DFFSR \sum_reg_reg[1]  ( .D(sum0[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[1]) );
  DFFSR \sum_reg_reg[0]  ( .D(sum0[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[0]) );
  XOR2X1 U23 ( .A(n21), .B(B_reg[1]), .Y(sum0[1]) );
  XOR2X1 U24 ( .A(B_reg[0]), .B(n22), .Y(sum0[0]) );
  OAI21X1 U25 ( .A(n23), .B(n24), .C(n25), .Y(n16) );
  NAND2X1 U26 ( .A(A_reg[3]), .B(n26), .Y(n25) );
  OAI21X1 U27 ( .A(n27), .B(n28), .C(n29), .Y(n26) );
  MUX2X1 U28 ( .B(n30), .A(n31), .S(n27), .Y(n15) );
  XNOR2X1 U29 ( .A(A_reg[2]), .B(B_reg[2]), .Y(n31) );
  NOR2X1 U30 ( .A(n32), .B(n28), .Y(n30) );
  INVX1 U31 ( .A(n29), .Y(n32) );
  XOR2X1 U32 ( .A(n24), .B(n23), .Y(n14) );
  XNOR2X1 U33 ( .A(n33), .B(A_reg[3]), .Y(n23) );
  AOI21X1 U34 ( .A(n29), .B(n27), .C(n28), .Y(n33) );
  NOR2X1 U35 ( .A(B_reg[2]), .B(A_reg[2]), .Y(n28) );
  AOI22X1 U36 ( .A(n21), .B(B_reg[1]), .C(n34), .D(A_reg[1]), .Y(n27) );
  XOR2X1 U37 ( .A(A_reg[1]), .B(n34), .Y(n21) );
  INVX1 U38 ( .A(n35), .Y(n34) );
  AOI22X1 U39 ( .A(Cin), .B(A_reg[0]), .C(n22), .D(B_reg[0]), .Y(n35) );
  XOR2X1 U40 ( .A(A_reg[0]), .B(Cin), .Y(n22) );
  NAND2X1 U41 ( .A(B_reg[2]), .B(A_reg[2]), .Y(n29) );
  INVX1 U42 ( .A(B_reg[3]), .Y(n24) );
endmodule

