/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12-SP3
// Date      : Tue Nov 21 18:45:52 2023
/////////////////////////////////////////////////////////////


module four_bit_select_adder ( clk, reset_n, A, B, Cin, output_sum, 
        output_Cout );
  input [3:0] A;
  input [3:0] B;
  output [3:0] output_sum;
  input clk, reset_n, Cin;
  output output_Cout;
  wire   Cout0, Cout1, Cout2, n14, n15, n16, n17, n18, n19, n20,
         \lower_adder/carry , \lower_adder/fa0/n3 , \lower_adder/fa0/n2 , n21,
         n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32;
  wire   [3:0] A_reg;
  wire   [3:0] B_reg;
  wire   [1:0] sum0;
  wire   [1:0] sum1;
  wire   [1:0] sum2;

  DFFSR \B_reg_reg[3]  ( .D(B[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[3]) );
  DFFSR \B_reg_reg[2]  ( .D(B[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[2]) );
  DFFSR \B_reg_reg[1]  ( .D(B[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[1]) );
  DFFSR \B_reg_reg[0]  ( .D(B[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        B_reg[0]) );
  DFFSR \A_reg_reg[3]  ( .D(A[3]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[3]) );
  DFFSR \A_reg_reg[2]  ( .D(A[2]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[2]) );
  DFFSR \A_reg_reg[1]  ( .D(A[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[1]) );
  DFFSR \A_reg_reg[0]  ( .D(A[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        A_reg[0]) );
  DFFSR Cout_reg_reg ( .D(n16), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_Cout) );
  DFFSR \sum_reg_reg[3]  ( .D(n14), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[3]) );
  DFFSR \sum_reg_reg[2]  ( .D(n15), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[2]) );
  DFFSR \sum_reg_reg[1]  ( .D(sum0[1]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[1]) );
  DFFSR \sum_reg_reg[0]  ( .D(sum0[0]), .CLK(clk), .R(reset_n), .S(1'b1), .Q(
        output_sum[0]) );
  AOI22X1 U20 ( .A(sum1[1]), .B(n17), .C(sum2[1]), .D(Cout0), .Y(n18) );
  AOI22X1 U21 ( .A(sum1[0]), .B(n17), .C(sum2[0]), .D(Cout0), .Y(n19) );
  AOI22X1 U22 ( .A(Cout1), .B(n17), .C(Cout2), .D(Cout0), .Y(n20) );
  XOR2X1 \lower_adder/fa0/U4  ( .A(A_reg[0]), .B(Cin), .Y(\lower_adder/fa0/n2 ) );
  AOI22X1 \lower_adder/fa0/U3  ( .A(n25), .B(Cin), .C(\lower_adder/fa0/n2 ), 
        .D(B_reg[0]), .Y(\lower_adder/fa0/n3 ) );
  XOR2X1 \lower_adder/fa0/U2  ( .A(B_reg[0]), .B(\lower_adder/fa0/n2 ), .Y(
        sum0[0]) );
  XOR2X1 \upper_adder_1/fa1/U4  ( .A(n21), .B(A_reg[3]), .Y(n31) );
  AOI22X1 \upper_adder_1/fa1/U3  ( .A(A_reg[3]), .B(n21), .C(n31), .D(B_reg[3]), .Y(n32) );
  XOR2X1 \upper_adder_1/fa1/U2  ( .A(B_reg[3]), .B(n31), .Y(sum2[1]) );
  INVX2 \upper_adder_1/fa1/U1  ( .A(n32), .Y(Cout2) );
  XOR2X1 \upper_adder_1/fa0/U2  ( .A(B_reg[2]), .B(n30), .Y(sum2[0]) );
  XOR2X1 \upper_adder_0/fa1/U4  ( .A(n22), .B(A_reg[3]), .Y(n28) );
  AOI22X1 \upper_adder_0/fa1/U3  ( .A(A_reg[3]), .B(n22), .C(n28), .D(B_reg[3]), .Y(n29) );
  XOR2X1 \upper_adder_0/fa1/U2  ( .A(B_reg[3]), .B(n28), .Y(sum1[1]) );
  INVX2 \upper_adder_0/fa1/U1  ( .A(n29), .Y(Cout1) );
  XOR2X1 \upper_adder_0/fa0/U2  ( .A(B_reg[2]), .B(A_reg[2]), .Y(sum1[0]) );
  XOR2X1 \lower_adder/fa1/U4  ( .A(\lower_adder/carry ), .B(A_reg[1]), .Y(n26)
         );
  AOI22X1 \lower_adder/fa1/U3  ( .A(A_reg[1]), .B(\lower_adder/carry ), .C(n26), .D(B_reg[1]), .Y(n27) );
  XOR2X1 \lower_adder/fa1/U2  ( .A(B_reg[1]), .B(n26), .Y(sum0[1]) );
  OR2X2 U23 ( .A(A_reg[2]), .B(B_reg[2]), .Y(n21) );
  AND2X2 U24 ( .A(A_reg[2]), .B(B_reg[2]), .Y(n22) );
  INVX2 U25 ( .A(n23), .Y(n17) );
  INVX2 U26 ( .A(n27), .Y(n23) );
  INVX1 U27 ( .A(n27), .Y(Cout0) );
  INVX1 U28 ( .A(n20), .Y(n16) );
  INVX1 U29 ( .A(n18), .Y(n14) );
  INVX1 U30 ( .A(n19), .Y(n15) );
  INVX2 U31 ( .A(\lower_adder/fa0/n3 ), .Y(\lower_adder/carry ) );
  INVX1 U32 ( .A(A_reg[0]), .Y(n24) );
  INVX2 U33 ( .A(n24), .Y(n25) );
  INVX2 U34 ( .A(A_reg[2]), .Y(n30) );
endmodule

